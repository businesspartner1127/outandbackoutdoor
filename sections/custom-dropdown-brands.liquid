{{ 'custom-dropdown-brands.css' | asset_url | stylesheet_tag }}

{% style %}

.section-{{ section.id }} {
  padding-top: {{ section.settings.padding_top }}em;
  padding-bottom: {{ section.settings.padding_bottom }}em;
}
.section-{{ section.id }} .cs-container h2, .section-{{ section.id }} .cs-container .cs-grid .cs-content .cs-items .cs-item .cs-text .cs-title {
  color: {{ section.settings.title_color }};
}
.section-{{ section.id }} .cs-container p, .section-{{ section.id }} .cs-footer-text {
  color: {{ section.settings.paragraph_color }};
}
.cs-container .cs-grid .cs-content .cs-links .cs-button {
  background: {{ section.settings.button_color }};
  color: {{ section.settings.button_text_color }};
}
.section-{{ section.id }} .cs-container .cs-grid .cs-content #cs-dropdown {
  background-image: url("{{ 'icon-select.jpg' | asset_img_url: 'master ' }}");
  background-position: right -3px center;
  border-radius: 10px;
  background-size: 3.6em;   
  margin: 0 auto;
  display: block;
  margin-bottom: 2em;
  width: 100%;
  box-shadow: rgb(0 0 0 / 16%) 0px 1px 4px;
}

.cs-dropdown-brands .cs-container .cs-grid .cs-content li[data-id=true]:before {    
  background: url("{{ 'green-check.png' | asset_img_url: 'master' }}");            
  background-size: cover;
  background-repeat: no-repeat;
  display: inline-block;
  width: 1em;
  height: 1em;
  content: "";
  margin-right: 0.6em;
}

.cs-dropdown-brands .cs-container .cs-grid .cs-content li[data-id=false]:before {
  background: url("{{ 'gray-check.png' | asset_img_url: 'master' }}");            
  background-size: cover;
  background-repeat: no-repeat;
  display: inline-block;
  width: 1em;
  height: 1em;
  content: "";
  margin-right: 0.6em;
}

{% endstyle %}

<section id="{{ section.id }}" class="section-{{ section.id }} cs-dropdown-brands">
    <div class="cs-container">
        {% if section.settings.heading != blank %}
            <h2>{{ section.settings.heading }}</h2>
        {% endif %}
        {% if section.settings.caption != blank %}
            <p>{{ section.settings.caption }}</p>
        {% endif %}
        <div class="cs-grid">
            <div class="cs-content">
                {% if section.settings.inner_heading != blank %}
                    <h2 class="cs-inner-title">{{ section.settings.inner_heading }}</h2>
                {% endif %}                    

                <div class="cs-dropdown">
                    <select id="cs-dropdown"></select>
                    <ul id="cs-dropdown-items"></ul>
                    <div class="cs-footer-text">
                      <p>*drop-off only, mail in not available</p>
                    </div>
                </div>

                {% if section.settings.button_label != blank %}                
                    <div class="cs-links">
                        <a class="cs-button" href="{{ section.settings.button_link }}">{{ section.settings.button_label }}</a>
                    </div>
                {% endif %}
            </div>
        </div>
        
        {% if section.settings.cta_text != blank and section.settings.cta_link != blank %}
        {% style %}
          .section-{{ section.id }} .cta_container {
            padding-top: {{ section.settings.cta_padding_top }}px;
            padding-bottom: {{ section.settings.cta_padding_bottom }}px;
          }
          
          .section-{{ section.id }} .cta_btn {
            color: {{ section.settings.cta_text_color }};
            border: 1px solid {{ section.settings.cta_border_color }};
            background: {{ section.settings.cta_background }}
          }
    
          .section-{{ section.id }} .cta_btn:hover {
            color: {{ section.settings.cta_hover_text_color }};
            border: 1px solid {{ section.settings.cta_hover_border_color }};
            background: {{ section.settings.cta_hover_background }}
          }
        {% endstyle %}
        {% assign pos_class = 'cta_center' %}
        {% case section.settings.cta_position %}
          {% when 'left' %}
            {%- assign pos_class = 'cta_left' -%}
          {% when 'right' %}
            {%- assign pos_class = 'cta_right' -%}
        {% endcase %}
        <div class="cta_container {{ pos_class }}">
          <a class="cta_btn" href="{{ section.settings.cta_link }}" title="">{{ section.settings.cta_text }}</a>
        </div>
      {% endif %}
      
    </div>
</section>

<script>
  const dropdown = $('#cs-dropdown')
  const dropdown_item = $('#cs-dropdown-items')
  const url = "{{ 'product_acceptance_matrix.json' | asset_url }}"

  $.getJSON(url, function(data) {
  $.each(data, function(key, entry) {      
    dropdown.append($('<option></option>').attr('value', key).text(key))
  })
  function filteredData(selected) {
    const filtered_data = data[selected]
    const append_asterisk = "{{ section.settings.append_asterisk }}"
    for (let [key, value] of Object.entries(filtered_data)) {
      if(append_asterisk.indexOf(key) >= 0) {
        key = key +' *'
      }
      dropdown_item.append($('<li></li>').attr('data-id', value).text(key +''))
    }
  }
  const selected_brand = $('#cs-dropdown option:first-child').text()  
  filteredData(selected_brand)
  dropdown.on('change', function() {
    dropdown_item.empty()
    const selected_brand = $(this).find('option:selected').text()
    filteredData(selected_brand)
  })
})
</script>

{% schema %}
  {
    "name": "Custom Dropdown Brands",
    "settings": [
    {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "Brands and gear we accept"
    },
    {
        "type": "textarea",
        "id": "caption",
        "label": "Caption",
        "default": "We add stuff often"
    },
    {
        "type": "text",
        "id": "inner_heading",
        "label": "Inner Heading"
    },
    {
        "type": "text",
        "id": "button_label",
        "label": "Button Label"
    },
    {
        "type": "url",
        "id": "button_link",
        "label": "Button Link"
    },
    {
        "type": "textarea",
        "id": "append_asterisk",
        "label": "Append Asterisk",
        "info": "List of Brand Categories you wanted to append * symbol. Please separate it with comma.",
        "default": "Adult Ski Equipment, Adult Snowboard Equipment"
    },
    {
        "type": "header",
        "content": "Paddings"
    },
    {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "em",
        "label": "Padding Top",
        "default": 2
    },
    {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "em",
        "label": "Padding Bottom",
        "default": 2
    },
    {
        "type": "header",
        "content": "Colors"
    },
    {
        "type": "color",
        "id": "title_color",
        "label": "Title Color",
        "default": "#000"
    },
    {
        "type": "color",
        "id": "paragraph_color",
        "label": "Paragraph Color",
        "default": "#000"
    },
    {
        "type": "color",
        "id": "button_color",
        "label": "Button Color",
        "default": "#f00"
    },
    {
        "type": "color",
        "id": "button_text_color",
        "label": "Button Text Color",
        "default": "#fff"
    }, 
    {
      "type": "header",
      "content": "CTA Option"
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "Text",
      "default": "Button"
    },
    {
      "type": "url",
      "id": "cta_link",
      "label": "Link"
    },
    {
      "type": "select",
      "id": "cta_position",
      "label": "Position",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    }, 
    {
      "type": "color",
      "id": "cta_text_color",
      "label": "Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "cta_background",
      "label": "Background Color",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "cta_border_color",
      "label": "Border Color",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "cta_hover_text_color",
      "label": "Hover Text Color",
      "default": "#ff0000"
    },
    {
      "type": "color",
      "id": "cta_hover_background",
      "label": "Hover Background Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "cta_hover_border_color",
      "label": "Hover Border Color",
      "default": "#ff0000"
    },
    {
      "type": "range",
      "id": "cta_padding_top",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Padding Top",
      "default": 25
    },
    {
      "type": "range",
      "id": "cta_padding_bottom",
      "min": 0,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 25
    }
  ],
    "presets": [
      {
        "name": "Custom Dropdown Brands"
      }
    ]
  }
{% endschema %}
